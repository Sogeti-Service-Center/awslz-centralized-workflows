name: 'Tilt build, push and deploy'
description: 'Auth with either kubectl config file or Rancher API. Thereafter build, push and deploy to registry and k8s using Tilt'
inputs:
  rancher-context:
    description: 'Rancher context i.e. cluster-id:project-id'
    required: false
    default: ''
  rancher-token:
    description: 'Rancher API bearer token'
    required: false
    default: ''
  rancher-url:
    description: 'Rancher API endpoint'
    required: false
    default: ''
  kube-config:
    description: 'A base64 encoded kubectl config'
    required: false
    default: ''
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-id }}
runs:
  # ${{ github.action_path }} == root of repo
  # ${{ inputs.name-of-input }} == inputs defined above
  using: "composite"
  steps:

    - name: configure kubectl from secret
      shell: bash
      run: |
        if ! [[ -z "${{ inputs.kube-config }}" ]]; then
          mkdir -p ${HOME}/.kube/ && echo "${{ inputs.kube-config }}" | base64 -d > ${HOME}/.kube/config
        fi

    - name: configure kubectl from Rancher API key
      shell: bash
      run: |
        if ! [[ -z "${{ inputs.rancher-context }}" || -z "${{ inputs.rancher-token }}" || -z "${{ inputs.rancher-url }}" ]]; then
          rancher login --skip-verify --context ${{ inputs.rancher-context }} --token ${{ inputs.rancher-token }} ${{ inputs.rancher-url }}
          mkdir -p ${HOME}/.kube
          rancher kubectl config view --minify --raw > ${HOME}/.kube/config
          KUBE_CLUSTER_URL=$(kubectl config view --minify -o 'jsonpath={.clusters[0].cluster.server}')
          KUBE_CONTEXT=$(kubectl config view --minify -o 'jsonpath={.current-context}')
          kubectl config set-cluster ${KUBE_CONTEXT} --insecure-skip-tls-verify=true --server=${KUBE_CLUSTER_URL}
        fi

    - name: Build, push and deploy
      shell: bash
      run: tilt ci
